---

- name: GPGPU Nodes
  hosts: gpgpunodes,cuda
  strategy: free
  become: yes
  vars:
    - cuda_init: False
    - gpu: True
    - hosts_file_to_populate: "/etc/hosts"
    - hosts_file_ansible_group_to_hosts_file: "{{ groups.extra_dns }}"
    - hosts_ip_source: "template"
  pre_tasks:
    - name: install some packages
      package: 
        name: "{{ item }}"
        state: present
      with_items:
        - "epel-release"
        - "kernel-headers"
      when: ansible_os_family == "RedHat"

    - name: update kernels and restart if we changed anything
      package:
        name: "kernel*"
        state: latest
        update_cache: True
      register: reg_update_kernels

    #TODO: how to best fetch linux-headers- the version we get after rebooting?
    # grub?
    - name: install linux linux-headers
      action: shell apt install -y linux-headers-$(uname -r)
      ignore_errors: True
      when: ansible_os_family == "Debian"

    - name: restart machine if packages were updated
      command: shutdown -r now "Ansible updates triggered. Rebooting now"
      async: 0
      poll: 0
      ignore_errors: True
      when: reg_update_kernels.changed
      register: reg_restart_update

    - name: Wait for instance to be ready
      wait_for: host={{ floating_ip }} port=22 search_regex=OpenSSH delay=5
      when: reg_restart_update.changed or (reg_restart_update.skipped is defined and reg_restart_update.skipped != True) or (reg_restart_update.failed is defined and reg_restart_update.failed)

  roles: 
    - { role: ansible-role-cuda, tags: [ 'cuda', 'nvidia' ] }
#    - { role: ansible-role-hosts-inventory, tags: [ 'dns', 'hosts' ] }

# We could use "dkms status" command to make sure that it's compiled for the running kernel

